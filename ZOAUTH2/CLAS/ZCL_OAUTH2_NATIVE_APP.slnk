<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_OAUTH2_NATIVE_APP" VERSION="1" LANGU="E" DESCRIPT="OAuth2 Native Application" UUID="0202322174CD1ED0A3B9AC35EE140144" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="MORITTU" CREATEDON="20110603" CHANGEDBY="FEMIA" CHANGEDON="20110830" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="701" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <implementing CLSNAME="ZCL_OAUTH2_NATIVE_APP" REFCLSNAME="ZIF_OAUTH2" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" RELTYPE="1"/>
 <publicSection>class ZCL_OAUTH2_NATIVE_APP definition
  public
  create public .

*&quot;* public components of class ZCL_OAUTH2_NATIVE_APP
*&quot;* do not include other source files here!!!
public section.

  interfaces ZIF_OAUTH2
      data values SSL_ID = &apos;ANONYM&apos; .

  data CONSUMER_NAME type ZOAUTH2_CONSUMER_NAME .
  data USER_NAME type ZOAUTH2_USER_NAME .
  data SCOPE type ZOAUTH2_API_HOST .

  methods CONSTRUCTOR
    importing
      !I_USER_NAME type ZOAUTH2_USER_NAME
      !I_CONSUMER_NAME type ZOAUTH2_CONSUMER_NAME
      !I_AUTH_HOST type ZOAUTH2_HOST
      !I_RET_REFRESH_TOKEN_HOST type ZOAUTH2_HOST
      !I_RET_REFRESH_TOKEN_REQU_URI type ZOAUTH2_HOST
      !I_RET_REFRESH_TOKEN_URL type ZOAUTH2_HOST
      !I_PROXY_HOST type STRING
      !I_PROXY_SERVICE type STRING
      !I_SSL_ID type SSFAPPLSSL .</publicSection>
 <protectedSection>protected section.
*&quot;* protected components of class ZCL_OAUTH2_NATIVE_APP
*&quot;* do not include other source files here!!!

  class-data RET_REFRESH_TOKEN_URL type ZOAUTH2_HOST .
  class-data RET_REFRESH_TOKEN_HOST type ZOAUTH2_HOST .
  class-data RET_REFRESH_TOKEN_REQUEST_URI type ZOAUTH2_HOST .</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_OAUTH2_NATIVE_APP
*&quot;* do not include other source files here!!!
private section.

  data RESPONSE_TYPE type STRING .

  methods GET_REFRESH_TOKEN
    importing
      value(I_VERIFICATION_CODE) type ZOAUTH2_TOKEN .</privateSection>
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="ZOAuth 2 - Consumer Name" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH2_CONSUMER_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="RESPONSE_TYPE" VERSION="1" LANGU="E" DESCRIPT="Response type" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="RET_REFRESH_TOKEN_HOST" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH2_HOST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="RET_REFRESH_TOKEN_REQUEST_URI" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH2_HOST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="RET_REFRESH_TOKEN_URL" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH2_HOST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="SCOPE" VERSION="1" LANGU="E" DESCRIPT="ZOAuth 2 - API Host" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH2_API_HOST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="USER_NAME" VERSION="1" LANGU="E" DESCRIPT="ZOAuth 2 - User Name" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZOAUTH2_USER_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="701" TYPESRC_LENG="0 "/>
 <interfaceMethod CLSNAME="ZCL_OAUTH2_NATIVE_APP" CPDNAME="ZIF_OAUTH2~AUTHORIZATION_REQUEST">
  <source>method ZIF_OAUTH2~AUTHORIZATION_REQUEST.

  DATA: wa_zoauth2_consumer TYPE zoauth2_consumer,
       lv_auth_url TYPE string,
       lv_user_name TYPE zoauth2_user_name,
       lv_verification_code TYPE zoauth2_token.

  SELECT SINGLE * FROM zoauth2_consumer INTO wa_zoauth2_consumer WHERE consumer_name = consumer_name.

  CONCATENATE i_auth_host &apos;?scope=&apos; wa_zoauth2_consumer-api_host &apos;&amp;response_type=code&amp;redirect_uri=&apos; wa_zoauth2_consumer-redirect_uris &apos;&amp;client_id=&apos; wa_zoauth2_consumer-client_id INTO lv_auth_url.

  CALL METHOD cl_gui_frontend_services=&gt;execute
  EXPORTING
    document               =  lv_auth_url
*  EXCEPTIONS
*    CNTL_ERROR             = 1
*    ERROR_NO_GUI           = 2
*    BAD_PARAMETER          = 3
*    FILE_NOT_FOUND         = 4
*    PATH_NOT_FOUND         = 5
*    FILE_EXTENSION_UNKNOWN = 6
*    ERROR_EXECUTE_FAILED   = 7
*    SYNCHRONOUS_FAILED     = 8
*    NOT_SUPPORTED_BY_GUI   = 9
*    others                 = 10
        .
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CALL FUNCTION &apos;ZOAUTH2_CALL_SCREEN_AUTH&apos;
    IMPORTING
      o_verification_code = lv_verification_code.

call method me-&gt;get_refresh_token
  exporting
    i_verification_code = lv_verification_code
    .


endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_OAUTH2_NATIVE_APP" CPDNAME="ZIF_OAUTH2~GET_ACCESS_TOKEN">
  <source>method ZIF_OAUTH2~GET_ACCESS_TOKEN.
   SELECT SINGLE access_token INTO token
    FROM zoauth2_user WHERE consumer_name = me-&gt;consumer_name AND user_name = me-&gt;user_name.
endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_OAUTH2_NATIVE_APP" CPDNAME="ZIF_OAUTH2~REFRESH_ACCESS_TOKEN">
  <source>method ZIF_OAUTH2~REFRESH_ACCESS_TOKEN.
  DATA:  client TYPE REF TO if_http_client,
      lv_auth_header TYPE zoauth2_token,
      lv_token        TYPE zoauth2_token,
      lv_rc TYPE i,
      lt_form_values TYPE     tihttpnvp,
      wa_form_values TYPE     ihttpnvp,
      lv_json_doc TYPE REF TO zcl_json_document,
      wa_oauth2_user TYPE zoauth2_user,
      wa_oauth2_consumer TYPE  zoauth2_consumer,
      lv_response TYPE string,
      lv_cdata type string.



  CALL METHOD cl_http_client=&gt;create_by_url
    EXPORTING
      url                = ret_refresh_token_url
      proxy_host         = &apos;lucifer.techedge.mi&apos;
      proxy_service      = &apos;3128&apos;
      ssl_id             = &apos;ANONYM&apos;
*    SAP_USERNAME       =
*    SAP_CLIENT         =
    IMPORTING
      client             = client
*  EXCEPTIONS
*    ARGUMENT_NOT_FOUND = 1
*    PLUGIN_NOT_ACTIVE  = 2
*    INTERNAL_ERROR     = 3
*    others             = 4
          .
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


  client-&gt;request-&gt;set_header_field(
    name = &apos;Host&apos;
    value = &apos;accounts.google.com&apos;
    ).

  client-&gt;request-&gt;set_content_type( &apos;application/x-www-form-urlencoded&apos; ).



  CALL METHOD client-&gt;request-&gt;set_method
    EXPORTING
      method = &apos;POST&apos;.

  CALL METHOD client-&gt;request-&gt;set_version
    EXPORTING
      version = &apos;1001&apos;.

  CALL METHOD cl_http_utility=&gt;if_http_utility~set_request_uri
    EXPORTING
      request = client-&gt;request
      uri     = &apos;/o/oauth2/token&apos;.

  SELECT SINGLE * INTO wa_oauth2_user
      FROM zoauth2_user WHERE consumer_name = me-&gt;consumer_name AND user_name = me-&gt;user_name.

  SELECT SINGLE * INTO wa_oauth2_consumer
      FROM zoauth2_consumer WHERE consumer_name = me-&gt;consumer_name .

*  MOVE: &apos;client_id&apos; TO wa_form_values-name ,
*       wa_oauth2_consumer-client_id TO wa_form_values-value.
*  APPEND wa_form_values TO lt_form_values.
*
*  MOVE: &apos;client_secret&apos; TO wa_form_values-name ,
*        wa_oauth2_consumer-client_secret TO wa_form_values-value.
*  APPEND wa_form_values TO lt_form_values.
*
*  MOVE: &apos;refresh_token&apos; TO wa_form_values-name ,
*        wa_oauth2_user-refresh_token TO wa_form_values-value.
*  APPEND wa_form_values TO lt_form_values.
*
*  MOVE: &apos;grant_type&apos; TO wa_form_values-name ,
*        &apos;refresh_token&apos; TO wa_form_values-value.
*  APPEND wa_form_values TO lt_form_values.
*
*
*  CALL METHOD client-&gt;response-&gt;if_http_entity~set_form_fields
*    EXPORTING
*      fields = lt_form_values.


CONCATENATE &apos;client_id=&apos; wa_oauth2_consumer-client_id &apos;&amp;client_secret=&apos; wa_oauth2_consumer-client_secret &apos;&amp;refresh_token=&apos; wa_oauth2_user-refresh_token &apos;&amp;grant_type=refresh_token&apos; into lv_cdata.

client-&gt;request-&gt;set_cdata( lv_cdata ).



  CALL METHOD  client-&gt;send
*  EXPORTING
*    TIMEOUT                    = CO_TIMEOUT_DEFAULT
    EXCEPTIONS
      http_communication_failure = 1
      http_invalid_state         = 2
      http_processing_failed     = 3
      http_invalid_timeout       = 4
      OTHERS                     = 5
          .
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CALL METHOD client-&gt;receive
    EXCEPTIONS
      http_communication_failure = 1
      http_invalid_state         = 2
      http_processing_failed     = 3
      OTHERS                     = 4.
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  client-&gt;response-&gt;get_status( IMPORTING code = lv_rc ).

  IF lv_rc EQ 200.

    CALL METHOD client-&gt;response-&gt;get_cdata
      RECEIVING
        data = lv_response.

    lv_json_doc = zcl_json_document=&gt;create_with_json( lv_response ).
    lv_token = lv_json_doc-&gt;get_value( &apos;access_token&apos; ).

    wa_oauth2_user-access_token = lv_token.
    o_token = lv_token.

    UPDATE   zoauth2_user FROM wa_oauth2_user.

  ENDIF.
endmethod.</source>
 </interfaceMethod>
 <method CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110907" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_USER_NAME" VERSION="1" LANGU="E" DESCRIPT="ZOAuth 2 - User Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110907" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH2_USER_NAME"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_CONSUMER_NAME" VERSION="1" LANGU="E" DESCRIPT="ZOAuth 2 - Consumer Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH2_CONSUMER_NAME"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_AUTH_HOST" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH2_HOST"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_RET_REFRESH_TOKEN_HOST" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH2_HOST"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_RET_REFRESH_TOKEN_REQU_URI" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH2_HOST"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_RET_REFRESH_TOKEN_URL" VERSION="1" LANGU="E" DESCRIPT="OAuth 2 - Host" CMPTYPE="1" MTDTYPE="2" EDITORDER="6 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZOAUTH2_HOST"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_PROXY_HOST" VERSION="1" LANGU="E" DESCRIPT="Proxy host" CMPTYPE="1" MTDTYPE="2" EDITORDER="7 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20110907" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_PROXY_SERVICE" VERSION="1" LANGU="E" DESCRIPT="Prosy service" CMPTYPE="1" MTDTYPE="2" EDITORDER="8 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20110907" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="CONSTRUCTOR" SCONAME="I_SSL_ID" VERSION="1" LANGU="E" DESCRIPT="SSL Client Identity" CMPTYPE="1" MTDTYPE="2" EDITORDER="9 " DISPID="0 " AUTHOR="FEMIA" CREATEDON="20110907" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SSFAPPLSSL"/>
  <source>METHOD constructor.
  DATA: lv_count TYPE i.

  me-&gt;consumer_name             = i_consumer_name.
  me-&gt;user_name                 = i_user_name.
  ret_refresh_token_host        = i_ret_refresh_token_host.
  ret_refresh_token_request_uri = i_ret_refresh_token_requ_uri.
  ret_refresh_token_url         = i_ret_refresh_token_url.
  me-&gt;zif_oauth2~proxy_host     = i_proxy_host.
  me-&gt;zif_oauth2~proxy_service  = i_proxy_service.
  me-&gt;zif_oauth2~ssl_id         = i_ssl_id.


  SELECT COUNT(*) INTO lv_count FROM zoauth2_user WHERE consumer_name = i_consumer_name AND user_name = i_user_name.

  IF lv_count EQ 0.
    me-&gt;zif_oauth2~authorization_request( i_auth_host = i_auth_host ).

  ELSE.

  ENDIF.


ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="GET_REFRESH_TOKEN" VERSION="1" LANGU="E" DESCRIPT="Get Refresh token" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110907" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_OAUTH2_NATIVE_APP" CMPNAME="GET_REFRESH_TOKEN" SCONAME="I_VERIFICATION_CODE" VERSION="1" LANGU="E" DESCRIPT="ZOAuth 2 - Token" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="IANNACCI" CREATEDON="20110823" CHANGEDBY="FEMIA" CHANGEDON="20110830" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZOAUTH2_TOKEN"/>
  <source>method GET_REFRESH_TOKEN.

  DATA: client TYPE REF TO if_http_client,
        lv_cdata TYPE string,
        wa_consumer TYPE zoauth2_consumer,
        lv_json_doc TYPE REF TO zcl_json_document,
        lv_access_token TYPE zoauth2_token,
        lv_refresh_token TYPE zoauth2_token,
        wa_user TYPE zoauth2_user,
        lv_rc type i.


  CALL METHOD cl_http_client=&gt;create
    EXPORTING
      HOST               =  ret_refresh_token_host
      scheme             = cl_http_client=&gt;SCHEMETYPE_HTTPS
      proxy_host         = me-&gt;zif_oauth2~proxy_host
      proxy_service      = me-&gt;zif_oauth2~proxy_service
      ssl_id             = me-&gt;zif_oauth2~ssl_id
*    SAP_USERNAME       =
*    SAP_CLIENT         =
    IMPORTING
      client             = client
*  EXCEPTIONS
*    ARGUMENT_NOT_FOUND = 1
*    PLUGIN_NOT_ACTIVE  = 2
*    INTERNAL_ERROR     = 3
*    others             = 4
          .
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.



  client-&gt;request-&gt;set_header_field(
    name = &apos;Host&apos;
    value = ret_refresh_token_host
    ).

  client-&gt;request-&gt;set_header_field(
      name = &apos;Content-Type&apos;
      value = &apos;application/x-www-form-urlencoded&apos;
      ).

  CALL METHOD client-&gt;request-&gt;set_method
    EXPORTING
      method = &apos;POST&apos;.

  CALL METHOD client-&gt;request-&gt;set_version
    EXPORTING
      version = &apos;1001&apos;.

  CALL METHOD cl_http_utility=&gt;if_http_utility~set_request_uri
    EXPORTING
      request = client-&gt;request
      uri     = ret_refresh_token_request_uri.

  SELECT SINGLE * FROM zoauth2_consumer INTO wa_consumer WHERE consumer_name = consumer_name.

  CONCATENATE &apos;client_id=&apos; wa_consumer-client_id &apos;&amp;client_secret=&apos; wa_consumer-client_secret &apos;&amp;code=&apos; i_verification_code &apos;&amp;redirect_uri=&apos; wa_consumer-redirect_uris &apos;&amp;grant_type=authorization_code&apos; INTO lv_cdata.

  client-&gt;request-&gt;set_cdata( lv_cdata ).


  CALL METHOD  client-&gt;send
*  EXPORTING
*    TIMEOUT                    = CO_TIMEOUT_DEFAULT
    EXCEPTIONS
      http_communication_failure = 1
      http_invalid_state         = 2
      http_processing_failed     = 3
      http_invalid_timeout       = 4
      OTHERS                     = 5
          .
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  CALL METHOD client-&gt;receive
    EXCEPTIONS
      http_communication_failure = 1
      http_invalid_state         = 2
      http_processing_failed     = 3
      OTHERS                     = 4.
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  DATA: response TYPE string.

  client-&gt;response-&gt;get_status( IMPORTING code = lv_rc ).

  IF lv_rc EQ 200.

    CALL METHOD client-&gt;response-&gt;get_cdata
      RECEIVING
        data = response.
    .

    lv_json_doc = zcl_json_document=&gt;create_with_json( response ).
    lv_access_token = lv_json_doc-&gt;get_value( &apos;access_token&apos; ).
    lv_refresh_token = lv_json_doc-&gt;get_value( &apos;refresh_token&apos; ).


    wa_user-consumer_name = consumer_name.
    wa_user-user_name = user_name.
*wa_user-PASSWORD_HASH =
    wa_user-access_token = lv_access_token.
    wa_user-refresh_token = lv_refresh_token.

    INSERT INTO zoauth2_user VALUES wa_user.

  ENDIF.

endmethod.</source>
 </method>
</CLAS>
